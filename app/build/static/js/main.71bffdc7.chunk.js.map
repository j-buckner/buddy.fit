{"version":3,"sources":["assets/healthy-options.svg","assets/fitness-activity-tracker.svg","assets/browser-stats.svg","assets/fitness-stats.svg","assets/fitness-progress-tracking.svg","assets/working-out.svg","assets/healthy-habit.svg","Components/Navigation.tsx","Containers/Home.tsx","Containers/Login.tsx","Containers/SignUp.tsx","Containers/NotFound.tsx","App/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","NavContainer","styled","div","StyledLink","Link","NavMenu","Navigation","useState","currentPage","setCurrentPage","location","useLocation","useEffect","console","log","pathname","to","HomeContainer","AngledTopBackground","blue","BottomBackground","Section","CardText","AnimatedImg","img","MaleRunnerImg","StatsImg","Home","ghost","type","size","src","MaleRunnerSrc","HealthyOptionsSrc","StatsSrc","FemaleFitnessSrc","WorkingOutSrc","LoginContainer","LoginContent","LoginTitle","h1","LoginCard","StyledForm","Form","FormTitle","CardFooter","FooterText","WorkingOutImg","Login","name","className","initialValues","remember","onFinish","values","Item","rules","required","message","prefix","UserOutlined","placeholder","LockOutlined","valuePropName","noStyle","htmlType","SignUpContainer","SignUpContent","SignUpTitle","SignUpCard","SignUp","useForm","form","scrollToFirstError","hasFeedback","Password","dependencies","getFieldValue","validator","rule","value","Promise","reject","resolve","whitespace","_","href","NotFoundContainer","HeadBackground","green","ErrorCode","ErrorMessage","NotFound","AppContainer","Content","App","exact","path","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.71bffdc7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/healthy-options.3e78385e.svg\";","module.exports = __webpack_public_path__ + \"static/media/fitness-activity-tracker.9c0c9c52.svg\";","module.exports = __webpack_public_path__ + \"static/media/browser-stats.4c969967.svg\";","module.exports = __webpack_public_path__ + \"static/media/fitness-stats.fffbb5c7.svg\";","module.exports = __webpack_public_path__ + \"static/media/fitness-progress-tracking.1107bcc7.svg\";","module.exports = __webpack_public_path__ + \"static/media/working-out.e201689a.svg\";","module.exports = __webpack_public_path__ + \"static/media/healthy-habit.ce766326.svg\";","import React, { useEffect, useState } from 'react';\nimport {\n  Link,\n  useLocation\n} from \"react-router-dom\";\nimport styled from 'styled-components';\n\nconst NavContainer = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  margin-top: 12px;\n`;\n\nconst StyledLink = styled(Link)`\n  font-size: 17px;\n  color: #fff;\n  &:hover {\n    color: #fff;\n    opacity: .7;\n  }\n`;\n\nconst NavMenu = styled.div`\n  background: none;\n  border: none;\n  width: 100%;\n  max-width: 1040px;\n  display: flex;\n  justify-content: flex-end;\n  margin: 0 12px;\n`;\n\nconst Navigation = () => {\n  const [currentPage, setCurrentPage] = useState<string | null>(null);\n  let location  = useLocation();\n  useEffect(() => {\n    console.log();\n    setCurrentPage(location.pathname);\n  }, [location]);\n  return (\n    <>\n      {currentPage !== '/login' && currentPage !== '/signup' ? \n        <NavContainer>\n          <NavMenu>\n            <StyledLink to=\"/login\">\n              Sign In\n            </StyledLink>\n          </NavMenu>\n        </NavContainer>\n      :\n        <></>\n      }\n    </>\n  );\n}\n\nexport default Navigation;","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport styled from 'styled-components';\nimport { Button } from 'antd';\nimport { blue } from '@ant-design/colors';\nimport HealthyOptionsSrc from '../assets/healthy-options.svg';\nimport FemaleFitnessSrc from '../assets/fitness-activity-tracker.svg';\nimport StatsSrc from '../assets/browser-stats.svg';\nimport MaleRunnerSrc from '../assets/fitness-stats.svg';\nimport WorkingOutSrc from '../assets/fitness-progress-tracking.svg';\n\nconst HomeContainer = styled.div`\n  width: 1040px;\n  margin: 0 24px 64px;\n  h1 {\n    margin: 24px 0;\n  }\n  p {\n    margin: 24px 0;\n    font-size: 16px;\n  }\n`;\n\nconst AngledTopBackground = styled.div`\n  width: 100%;\n  height: 1000px;\n  background: linear-gradient(150deg, ${blue[6]} 15%,${blue[5]} 70%,${blue[4]} 94%);\n  position: absolute;\n  z-index: -1;\n  -webkit-transform: skewY(-8deg);\n  transform: skewY(-8deg);\n  transform-origin: 0;\n  top: -508px;\n  left: 0;\n  @media (max-width: 768px) {\n    top: -420px;\n  }\n`;\n\nconst BottomBackground = styled.div`\n  width: 100%;\n  height: 100px;\n  background: linear-gradient(150deg, ${blue[6]} 15%,${blue[5]} 70%,${blue[4]} 94%);\n  position: absolute;\n  z-index: -1;\n  left: 0;\n  bottom: 0;\n`;\n\nconst Section = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  @media (max-width: 768px) {\n    flex-direction: column;\n    text-align: center;\n  }\n  &:nth-of-type(odd) {\n    text-align: right;\n    @media (max-width: 768px) {\n      flex-direction: column-reverse;\n      text-align: center;\n    }\n  }\n  &:nth-of-type(2) {\n    margin-top: 60px;\n    text-align: left;\n    color: #fff;\n    h1 {\n      color: #fff;\n    }\n    @media (max-width: 768px) {\n      text-align: center;\n    }\n  }\n  &:not(:nth-of-type(2)) {\n    margin: 60px 0;\n    color: black;\n    h1 {\n      color: black;\n    }\n    @media (max-width: 768px) {\n      margin: 0 0;\n    }\n  }\n`;\n\nconst CardText = styled.div`\n  margin: 24px;\n`;\n\nconst AnimatedImg = styled.img`\n  max-width: 100%;\n  width: 400px;\n  margin: 24px;\n`;\n\nconst MaleRunnerImg = styled(AnimatedImg)`\n  margin: 0;\n  margin-top: calc(4% + 10px);\n  -webkit-transform: scaleX(-1);\n  transform: scaleX(-1);\n`;\n\nconst StatsImg = styled(AnimatedImg)`\n  margin: 0;\n  width: 500px;\n  transform: rotate(18deg);\n`;\n\nconst Home = () => {\n  return (\n    <HomeContainer>\n      <AngledTopBackground />\n      <Section>\n        <CardText>\n          <h1>\n            Buddy.Fit\n          </h1>\n          <p>\n            Your buddy designed to guide you on your fitness journey.\n          </p>\n          <Button ghost type=\"default\" size=\"large\">\n            <Link to=\"/signup\">Sign Up for Free</Link>\n          </Button>\n        </CardText>\n        <MaleRunnerImg src={MaleRunnerSrc} />\n      </Section>\n      <Section>\n        <AnimatedImg src={HealthyOptionsSrc} />\n        <CardText>\n          <h1>\n            Lorem Ipsum\n          </h1>\n          <p>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n          </p>\n        </CardText>\n      </Section>\n      <Section>\n        <CardText>\n          <h1>\n            Lorem Ipsum\n          </h1>\n          <p>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n          </p>\n        </CardText>\n        <StatsImg src={StatsSrc} />\n      </Section>\n      <Section>\n        <AnimatedImg src={FemaleFitnessSrc} />\n        <CardText>\n          <h1>\n            Lorem Ipsum\n          </h1>\n          <p>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n          </p>\n        </CardText>\n      </Section>\n      <Section>\n        <CardText>\n          <h1>\n            Lorem Ipsum\n          </h1>\n          <p>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n          </p>\n        </CardText>\n        <AnimatedImg src={WorkingOutSrc} />\n      </Section>\n      <BottomBackground />\n    </HomeContainer>\n  );\n}\n\nexport default Home;\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport styled from 'styled-components';\nimport { Form, Input, Button, Checkbox } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport { blue } from '@ant-design/colors';\nimport WorkingOutSrc from '../assets/working-out.svg';\n\nconst LoginContainer = styled.div`\n  width: 1040px;\n  margin: 48px 24px;\n  @media (max-width: 768px) {\n    margin: 0 0 200px;\n  }\n`;\n\nconst LoginContent = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst LoginTitle = styled.h1`\n  margin: 48px 0 36px;\n  color: ${blue[5]};\n  font-weight: bolder;\n  @media (max-width: 768px) {\n    margin: 18px 0;\n  }\n`;\n\nconst LoginCard = styled.div`\n  width: 400px;\n  background: #fff;\n  padding: 48px 48px 24px;\n  border-radius: 4px;\n  box-shadow: rgba(60, 66, 87, 0.12) 0px 7px 14px 0px, rgba(0, 0, 0, 0.12) 0px 3px 6px 0px;\n  @media (max-width: 768px) {\n    width: 100%;\n    box-shadow: none;\n  }\n`;\n\nconst StyledForm = styled(Form)`\n  .login-form {\n  max-width: 300px;\n  }\n  .login-form-forgot {\n    float: right;\n  }\n  .login-form-button {\n    width: 100%;\n  }\n`;\n\nconst FormTitle = styled.div`\n  font-size: 20px;\n  font-weight: 600;\n  margin-bottom: 24px;\n`;\n\nconst CardFooter = styled.div`\n  margin: 36px 0;\n  display: flex;\n`;\n\nconst FooterText = styled.div`\n  color: black;\n  margin: 0 6px;\n`;\n\nconst StyledLink = styled(Link)`\n  margin: 0 6px;\n`;\n\nconst BottomBackground = styled.div`\n  width: 100%;\n  height: 47px;\n  background: linear-gradient(150deg, ${blue[6]} 15%,${blue[5]} 70%,${blue[4]} 94%);\n  position: absolute;\n  z-index: -2;\n  left: 0;\n  bottom: 0;\n`;\n\nconst WorkingOutImg = styled.img`\n  position: absolute;\n  z-index: -1;\n  width: 400px;\n  left: 50%;\n  transform: translateX(-50%);\n  bottom: 0;\n`;\n\nconst Login = () => {\n  const onFinish = (values: any) => {\n    console.log('Received values of form: ', values);\n  };\n  return (\n    <LoginContainer>\n      <LoginContent>\n        <LoginTitle>\n          <Link to=\"/\">Buddy.Fit</Link>\n        </LoginTitle>\n        <LoginCard>\n          <StyledForm\n            name=\"login\"\n            className=\"login-form\"\n            initialValues={{ remember: true }}\n            onFinish={onFinish}\n            size=\"large\"\n          >\n            <FormTitle>Sign in to your account</FormTitle>\n            <Form.Item\n              name=\"email\"\n              rules={[{ required: true, message: 'Please input your Email' }]}\n            >\n              <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Email\" />\n            </Form.Item>\n            <Form.Item\n              name=\"password\"\n              rules={[{ required: true, message: 'Please input your Password' }]}\n            >\n              <Input\n                prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                type=\"password\"\n                placeholder=\"Password\"\n              />\n            </Form.Item>\n            <Form.Item>\n              <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\n                <Checkbox>Remember me</Checkbox>\n              </Form.Item>\n              <Link to=\"/account\" className=\"login-form-forgot\">Forgot password</Link>\n            </Form.Item>\n            <Form.Item>\n              <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                Log in\n              </Button>\n            </Form.Item>\n          </StyledForm>\n        </LoginCard>\n        <CardFooter>\n          <FooterText>\n            Don't have an account?\n          </FooterText>\n          <StyledLink to=\"/signup\">Sign up</StyledLink>\n        </CardFooter>\n      </LoginContent>\n      <WorkingOutImg src={WorkingOutSrc} />\n      <BottomBackground />\n    </LoginContainer>\n  );\n}\n\nexport default Login;\n","import React, { useState } from 'react';\nimport { Link } from \"react-router-dom\";\nimport styled from 'styled-components';\nimport { \n  Form,\n  Input,\n  Checkbox,\n  Button\n} from 'antd';\nimport { blue } from '@ant-design/colors';\nimport WorkingOutSrc from '../assets/healthy-habit.svg';\n\nconst SignUpContainer = styled.div`\n  width: 1040px;\n  margin: 48px 24px 0;\n  @media (max-width: 768px) {\n    margin: 0;\n  }\n`;\n\nconst SignUpContent = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 164px;\n`;\n\nconst SignUpTitle = styled.h1`\n  margin: 48px 0 36px;\n  color: ${blue[5]};\n  font-weight: bolder;\n  @media (max-width: 768px) {\n    margin: 18px 0;\n  }\n`;\n\nconst SignUpCard = styled.div`\n  width: 400px;\n  background: #fff;\n  padding: 48px;\n  border-radius: 4px;\n  box-shadow: rgba(60, 66, 87, 0.12) 0px 7px 14px 0px, rgba(0, 0, 0, 0.12) 0px 3px 6px 0px;\n  @media (max-width: 768px) {\n    width: 100%;\n    box-shadow: none;\n  }\n`;\n\nconst StyledForm = styled(Form)`\n  .signup-form {\n  max-width: 300px;\n  }\n  .signup-form-forgot {\n    float: right;\n  }\n  .signup-form-button {\n    width: 100%;\n  }\n`;\n\nconst FormTitle = styled.div`\n  font-size: 20px;\n  font-weight: 600;\n  margin-bottom: 24px;\n`;\n\nconst CardFooter = styled.div`\n  margin: 36px 0;\n  display: flex;\n`;\n\nconst FooterText = styled.div`\n  color: black;\n  margin: 0 6px;\n`;\n\nconst StyledLink = styled(Link)`\n  margin: 0 6px;\n`;\n\nconst BottomBackground = styled.div`\n  width: 100%;\n  height: 47px;\n  background: linear-gradient(150deg, ${blue[6]} 15%,${blue[5]} 70%,${blue[4]} 94%);\n  position: absolute;\n  z-index: -2;\n  left: 0;\n  bottom: 0;\n`;\n\nconst WorkingOutImg = styled.img`\n  position: absolute;\n  z-index: -1;\n  width: 300px;\n  left: 50%;\n  transform: translateX(-50%);\n  bottom: 0;\n`;\n\nconst SignUp = () => {\n  const [form] = Form.useForm();\n\n  const onFinish = (values: any) => {\n    console.log('Received values of form: ', values);\n  };\n\n  return (\n    <SignUpContainer>\n      <SignUpContent>\n          <SignUpTitle>\n            <Link to=\"/\">Buddy.Fit</Link>\n          </SignUpTitle>\n        <SignUpCard>\n          <StyledForm\n            form={form}\n            name=\"signup\"\n            className=\"signup-form\"\n            onFinish={onFinish}\n            scrollToFirstError\n            size=\"large\"\n          >\n            <FormTitle>Create an account</FormTitle>\n            <Form.Item\n              name=\"email\"\n              rules={[\n                {\n                  type: 'email',\n                  message: 'The input is not valid E-mail',\n                },\n                {\n                  required: true,\n                  message: 'Please input your E-mail',\n                },\n              ]}\n            >\n              <Input placeholder=\"Email\" />\n            </Form.Item>\n\n            <Form.Item\n              name=\"password\"\n              rules={[\n                {\n                  required: true,\n                  message: 'Please input your password',\n                },\n              ]}\n              hasFeedback\n            >\n              <Input.Password placeholder=\"Password\" />\n            </Form.Item>\n\n            <Form.Item\n              name=\"confirm\"\n              dependencies={['password']}\n              hasFeedback\n              rules={[\n                {\n                  required: true,\n                  message: 'Please confirm your password',\n                },\n                ({ getFieldValue }) => ({\n                  validator(rule, value) {\n                    if (!value || getFieldValue('password') === value) {\n                      return Promise.resolve();\n                    }\n                    return Promise.reject('The two passwords that you entered do not match');\n                  },\n                }),\n              ]}\n            >\n              <Input.Password placeholder=\"Confirm Password\" />\n            </Form.Item>\n\n            <Form.Item\n              name=\"nickname\"\n              rules={[{ required: true, message: 'Please input your nickname', whitespace: true }]}\n            >\n              <Input placeholder=\"Nickname\" />\n            </Form.Item>\n\n            <Form.Item\n              name=\"agreement\"\n              valuePropName=\"checked\"\n              rules={[\n                { validator:(_, value) => value ? Promise.resolve() : Promise.reject('Should accept agreement') },\n              ]}\n            >\n              <Checkbox>\n                I have read the <a href=\"\">agreement</a>\n              </Checkbox>\n            </Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\" className=\"signup-form-button\">\n              Sign up\n            </Button>\n          </StyledForm>\n        </SignUpCard>\n        <CardFooter>\n          <FooterText>\n            Already have an account?\n          </FooterText>\n          <StyledLink to=\"/login\">Sign in</StyledLink>\n        </CardFooter>\n      </SignUpContent>\n      <WorkingOutImg src={WorkingOutSrc} />\n      <BottomBackground />\n    </SignUpContainer>\n  );\n}\n\nexport default SignUp;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { green } from '@ant-design/colors';\n\nconst NotFoundContainer = styled.div`\n  margin-top: 48px;\n`;\n\nconst HeadBackground = styled.div`\n  width: 100%;\n  height: 52px;\n  background: linear-gradient(150deg, ${green[6]} 15%,${green[5]} 70%,${green[4]} 94%);\n  position: absolute;\n  z-index: -1;\n  top: 0;\n  left: 0;\n`;\n\nconst ErrorCode = styled.div`\n  color: black;\n  text-align: center;\n  font-size: 64px;\n`;\n\nconst ErrorMessage = styled.div`\n  color: black;\n  text-align: center;\n  font-size: 36px;\n`;\n\nconst NotFound = () => (\n  <NotFoundContainer>\n    <HeadBackground />\n    <ErrorCode>404</ErrorCode>\n    <ErrorMessage>Page does not exist.</ErrorMessage>\n  </NotFoundContainer>\n);\n\nexport default NotFound;","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport styled from 'styled-components';\nimport Navigation from '../Components/Navigation';\nimport Home from '../Containers/Home';\nimport Login from '../Containers/Login';\nimport SignUp from '../Containers/SignUp';\nimport NotFound from '../Containers/NotFound';\n\nconst AppContainer = styled.div`\n  width: 100%;\n  height: auto;\n  position: relative;\n  overflow: hidden;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n  min-height: 100vh;\n`;\n\nconst App = () => {\n  return (\n    <Router>\n      <AppContainer>\n        <Navigation />\n          <Content>\n            <Switch>\n              <Route exact path=\"/\">\n                <Home />\n              </Route>\n              <Route exact path=\"/login\">\n                <Login />\n              </Route>\n              <Route exact path=\"/signup\">\n                <SignUp />\n              </Route>\n              <Route path=\"*\">\n                <NotFound />\n              </Route>\n            </Switch>\n          </Content>\n      </AppContainer>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './scss/index.scss';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}